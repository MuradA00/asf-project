.services {
  --grid-max-w: 72.25rem;
  --btn-ratio: 2.5rem;
  --item-h: clamp(15.75rem, 24vw, 24rem);
  --item-py: clamp(1.25rem, 2.375vw, 2.375rem);
  --item-px: 0;
  --icon-ratio: 4rem;
  --modals-top-h: 19.625rem;
  --modals-top-px: 1rem;
  --modals-bottom-pt: clamp(1.25rem, 2.5vw, 2.5rem);
  --modals-bottom-px: 1rem;
  --modals-bottom-pb: 2.5rem;
  --heading-max-w: 37.5rem;
  --modal-btn-ratio: 3.75rem;

  .heading {
    max-width: 35.75rem;
  }

  &__wrapper {
    @include m(b, 1.875rem);
  }
  &__grid {
    max-width: var(--grid-max-w);
    margin-left: auto;

    grid-template-columns: 100%;

    &-item {
      min-height: var(--item-h);

      padding: var(--item-py) var(--item-px);

      display: flex;
      flex-direction: column;
    }
    &-icon {
      width: var(--icon-ratio);
      height: var(--icon-ratio);

      @include m(b, 1rem);
    }
    &-head {
      color: rgba(var(--r-clr), 1);

      font-size: clamp(var(--text-xm), 1.375vw, 1.375rem);
      font-weight: 400;
      line-height: 127.272727%;

      @include m(b, 0.625rem);
    }
    &-info {
      flex: 1;

      @include m(b, 1.5rem);
    }
    &-btn {
      width: var(--btn-ratio);
      height: var(--btn-ratio);

      @include dfc;
      @include tr(200, ease);

      border-radius: 50%;
      border: 1px solid rgba(var(--light-clr), 1);

      align-self: flex-end;

      &:active {
        transform: scale(.925);
      }

      svg {
        fill: transparent;
        stroke: rgba(var(--text-dark-clr), 1);

        width: 0.75rem;

        aspect-ratio: 1 / 1;
      }
      @include hover {
        &:hover {
          background-color: rgba(var(--r-clr), 1);

          border: 1px solid rgba(var(--r-clr), 1);

          transform: scale(1.1);

          svg {
            stroke: rgba(var(--w-clr), 1);
          }
        }
      }
    }
  }
  &__modal {
    position: fixed;

    width: 100%;
    height: 100%;

    top: 0;
    left: 0;

    overflow-y: scroll;

    @include z-4;

    background-color: rgba(var(--w-clr), 1);

    @include tr(300, ease);

    transform: translateY(100%);

    visibility: hidden;

    pointer-events: none;

    &--active {
      transform: translateY(0);

      visibility: visible;

      pointer-events: all;
    }

    ul {
      --point-ratio: clamp(0.375rem, 0.5vw, 0.5rem);

      max-width: 30rem;

      li {
        @extend p;

        position: relative;

        padding-left: calc(var(--point-ratio) + 0.5rem);

        &::before {
          @include pseudo;

          width: var(--point-ratio);
          height: var(--point-ratio);

          border-radius: 50%;

          background-color: rgba(var(--r-clr), 1);

          top: calc((var(--point-ratio) / 2) + .25rem);
          left: 0;
        }

        &:not(:last-child) {
          @include m(b, 0.5rem);
        }
      }
    }

    &-close {
      width: var(--modal-btn-ratio);
      height: var(--modal-btn-ratio);

      border-radius: 50%;

      background-color: rgba(var(--w-clr), 1);

      position: absolute;

      top: 1rem;
      right: 1rem;

      @include z-1;

      @include tr(300, ease);

      @include hover {
        &:hover {
          transform: scale(1.05);
        }
      }
      &:active {
        transform: scale(.975);
      }

      span {
        --bar-w: 0.75rem;
        --bar-h: 0.125rem;

        background-color: rgba(var(--text-dark-clr), 1);

        width: var(--bar-w);
        height: var(--bar-h);

        position: absolute;

        top: 50%;
        left: 50%;

        transform: translate(-50%, -50%) rotate(var(--direction));

        &:nth-child(1) {
          --direction: 45deg;
        }
        &:nth-child(2) {
          --direction: -45deg;
        }

      }
    }
    &-head {
      position: relative;
    }
    &-btn {
      width: 100%;
    }
    &-top {
      min-height: var(--modals-top-h);

      background-size: cover;
      background-repeat: no-repeat;

      padding: 1.25rem var(--modals-bottom-px) clamp(1.25rem, 3.75vw, 3.75rem);

      color: rgba(var(--w-clr), 1);

      display: flex;
      align-items: flex-end;

      position: relative;

      &::before {
        @include pseudo;

        width: 100%;
        height: 100%;

        background-color: rgba(var(--text-dark-clr), 0.3);

        top: 0;
        left: 0;
      }
    }
    &-heading {
      letter-spacing: -0.05rem;
      font-size: clamp(1.625rem, 2.5vw, 2.5rem);

      max-width: var(--heading-max-w);
    }
    &-title {
      background-color: rgba(var(--bl-clr), 1);

      padding: 0.25rem clamp(2.25rem, 2.75rem, 2.75rem);

      width: fit-content;

      @include m(b, 0.25rem);

      @include dfc;
      text-align: center;

      span {
        @extend p;
      }
    }
    &-info {
      & > *:not(:last-child) {
        @include m(b, 1.25rem);
      }
      &-heading {
        color: rgba(var(--r-clr), 1);

        font-size: clamp(var(--text-xm), 1.375vw, 1.375rem) !important;

        max-width: 34rem;
      }
    }
    &-bottom {
      padding: var(--modals-bottom-pt) var(--modals-top-px) 2.5rem;
    }
  }
}

@include mq(min, mob-mq) {
  .services {
    --cols: 2;
    --item-px: 1.5rem;

    &__grid {
      display: grid;
      grid-template-columns: repeat(var(--cols), 1fr);

      &-item {
        &:nth-child(1),
        &:nth-child(2),
        &:nth-child(3) {
         border-bottom: 1px solid rgba(var(--light-clr), 1);
        }
      }
    }
  }
}

@include mq(min, tab-mq) {
  .services {
    --cols: 3;
    --modals-top-h: 41.25rem;
    --modals-bg: 248, 248, 248;
    --modals-top-px: clamp(2rem, 3.75vw, 3.75rem);
    --modals-bottom-px: clamp(1.25rem, 2.75vw, 2.75rem);
    --modal-btn-ratio: 4.625rem;

    &__grid {
      &-btn {
        align-self: flex-start;
      }
    }
    &__modal {
      background-color: transparent;

      display: grid;
      grid-template-columns: repeat(2, 1fr);

      transform: translateY(0);

      visibility: hidden;

      opacity: 0;

      &-overlay {
        backdrop-filter: blur(1rem);

        background-color: rgba(var(--modals-bg), .88);

        opacity: 0;

        visibility: hidden;

        pointer-events: none;

        @include tr(300, ease);
      }
      &-item {
        background-color: rgba(var(--w-clr), 1);

        transform: translateX(100%);

        @include tr(300, ease);
      }

      &--active {
        opacity: 1;

        visibility: visible;

        pointer-events: all;

        .services__modal-overlay {
          opacity: 1;

          visibility: visible;

          pointer-events: all;
        }
        .services__modal-item {
          transform: translateX(0);
        }
      }
    }
  }
}
